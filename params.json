{
  "name": "Brotli",
  "tagline": "Brotli compression format",
  "body": "### Introduction\r\n\r\nBrotli is a generic-purpose lossless compression algorithm that compresses data\r\nusing a combination of a modern variant of the LZ77 algorithm, Huffman coding\r\nand 2nd order context modeling, with a compression ratio comparable to the best\r\ncurrently available general-purpose compression methods. It is similar in speed\r\nwith deflate but offers more dense compression.\r\n\r\nThe specification of the Brotli Compressed Data Format is defined in [RFC 7932](https://www.ietf.org/rfc/rfc7932.txt).\r\n\r\nBrotli is open-sourced under the MIT License, see the LICENSE file.\r\n\r\nBrotli mailing list:\r\nhttps://groups.google.com/forum/#!forum/brotli\r\n\r\n[![Build Status](https://travis-ci.org/google/brotli.svg?branch=master)](https://travis-ci.org/google/brotli)\r\n\r\n### Benchmarks\r\n* [Squash Compression Benchmark](https://quixdb.github.io/squash-benchmark/) / [Unstable Squash Compression Benchmark](https://quixdb.github.io/squash-benchmark/unstable/)\r\n* [Large Text Compression Benchmark](http://mattmahoney.net/dc/text.html)\r\n* [Lzturbo Benchmark](https://sites.google.com/site/powturbo/home/benchmark)\r\n\r\n### Related projects\r\nIndependent [decoder](https://github.com/madler/brotli) implementation by Mark Adler, based entirely on format specification.\r\n\r\nJavaScript port of brotli [decoder](https://github.com/devongovett/brotli.js). Could be used directly via `npm install brotli`\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}